---
layout: post
title:  "边缘计算云平台的现状和要面对的问题"
categories: jekyll update
---

# 概述
先简单阐述一些概念，假如你有一大堆服务器，然后你在城市某个角落租下一个厂房，把这些服务器连接到互联网上，你的这些服务器就组成一个公有云。如果你能够把它们分割开来，租给有需要的个人或企业，你就成了云供应商，云计算供应商。
这些集中在一起的服务器，提供公网IP，能被互联网其它位置访问到，称之为中心云，这里的服务器节点称为中心云节点。
而散落在用户家里，或者靠近用户家里的这些设备，如家里的网关，小区的基站，甚至于个人手机，都可以称之为边缘设备。
边缘设备靠近用户，能够及时响应用户的需求，也可以对采集的数据预处理。比如路边的人脸识别，如果拍摄到的每个人像都送到中心云，对通信带宽的要求就非常高，如果只是把提取的特征值上传到云中心，就能明显减少对带宽的需求。
边缘计算的提出，就是把部分计算工作下放到边缘设备端，众多的边缘设备需要和中心云上的节点协同工作。这些边缘设备和中心节点就组成了边缘计算云。
而操作这些云，能够方便地在边缘和中心节点部署计算单元的系统称为边缘计算平台。

当前技术生态下，最合适的计算单元当然是容器，而最适合被用来编排和部署容器的云平台自然是Kubernetes.

# 编排和部署

目前众多边缘计算云平台供应商都采用了Kubernetes, 通常的做法是，用户在中心云节点建立 Kubernetes Master, 而后所有的边缘设备加入进来。
通过Kubernetes Master 可以向指定的边缘设备或设备组下发容器（实际是pod或容器组），在编排和部署方面，Kubernetes是极好的，这里就勿用细说。

# 网络问题

在边缘设备和中心节点的容器组，它们之间的网络连接将是一个比较棘手的问题。
对于中心节点之间，或者处在同一个区域的边缘设备的设备之间，它们内部的容器或者POD，互相之间建立虚拟的层二网络，是非常简单的，常见的插件就有Flannel.
然而对于中心节点和边缘设备，以及不同区域的边缘设备之间，它们内部的容器组网，目前大多没有好的思路，更不存在什么已实现的插件了。
所以，很多时候边缘设备必须采用宿主机网路，这样的话，网络隔离就成了一句空话。

# 嵌入式资源约束

嵌入式系统由于它天生的资源约束，包括cpu能力，内存和存储方面的约束。在支持原生的kubernetes组件方面显得比较力不从心，所以如果能够对Kubernetes运行在Slave端的组件进行定制和减少对资源的依赖，将是一个重要方向。









